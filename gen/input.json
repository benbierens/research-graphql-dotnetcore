{
    "config": {
        "generateNamespace": "gqldemo_generated",
        "idType": "int",
        "packages": [
            "Microsoft.EntityFrameworkCore --version 5.0.13",
            "Microsoft.EntityFrameworkCore.Design --version 5.0.13",
            "Microsoft.EntityFrameworkCore.SqlServer --version 5.0.13",
            "Microsoft.EntityFrameworkCore.Proxies --version 5.0.13",
            "HotChocolate.AspNetCore",
            "HotChocolate.AspNetCore.Subscriptions",
            "HotChocolate.AspNetCore.Playground",
            "HotChocolate.Subscriptions",
            "HotChocolate.Subscriptions.InMemory",
            "Npgsql.EntityFrameworkCore.PostgreSQL --version 5.0.10"
        ],
        "output": {
            "projectRoot": "../demo",
            "sourceFolder": "src",
            "testFolder": "test",
            "generatedFolder": "generated",
            "dtoSubFolder": "dto",
            "databaseSubFolder": "db",
            "graphQlSubFolder": "gql"
        },
        "Database": {
            "dbName": "graphqlee",
            "dbUsername": "postgres",
            "dbPassword": "admin_password_please",
            "dbContextClassName": "DatabaseContext",
            "dbAccesserClassName": "Db",
            "dbContextFileName": "DatabaseContext",
            "dbContainerName": "db"
        },
        "GraphQl": {
            "gqlTypesFileName": "GraphQlTypes",
            "gqlQueriesClassName": "Queries",
            "gqlQueriesFileName": "Queries",

            "gqlMutationsClassName": "Mutations",
            "gqlMutationsFilename": "Mutations",
            "gqlMutationsInputTypePostfix": "Input",
            "gqlMutationsCreateMethod": "Create",
            "gqlMutationsUpdateMethod": "Update",
            "gqlMutationsDeleteMethod": "Delete",

            "gqlSubscriptionsClassName": "Subscriptions",
            "gqlSubscriptionsFilename": "Subscriptions",
            "gqlSubscriptionCreatedMethod": "Created",
            "gqlSubscriptionUpdatedMethod": "Updated",
            "gqlSubscriptionDeletedMethod": "Deleted"
        }

    },
    "models": [
        {
            "name": "Cat",
            "fields": [
                {
                    "name": "Name",
                    "type": "string"
                },
                {
                    "name": "Age",
                    "type": "int"
                }
            ]
        },
        {
            "name": "Couch",
            "fields": [
                {
                    "name": "Location",
                    "type": "string"
                }
            ],
            "hasMany": ["Cat"]
        }
    ]
}
